<?php

namespace {{ namespace }};

use {{ namespace }};
use App\Http\Controllers\Api\Client\AclTraits;
use Hemend\Api\Libraries\Permissions as LibPermissions;

class AuthHandshake extends {{ version }}
{
    use AclTraits\Auth;

    static public function title(): string
    {
        return __('Handshake');
    }

    public function __invoke()
    {
        if ($this->user()) {
            $roles = $this->user()->getRoleNames();
            if ($this->user()->hasRole('super-admin')) {
                $permissions = ['*'];
            } else {
                $perms = LibPermissions::getPermissionsFromApi(
                    self::SERVICE,
                    {{ version }}::class,
                    $this->user()->getAllPermissions()
                );

                $permsNotPublic = LibPermissions::getRolePermissionsFromApi(self::SERVICE, {{ version }}::class);
                $permissions = LibPermissions::merge($perms, $permsNotPublic);
            }
        } else {
            $role = \App\Models\AclRoles::findById(1); // Public Role
            $roles = [$role->name];
            $perms = LibPermissions::getPermissionsFromApi(
                self::SERVICE,
                {{ version }}::class,
                $role->getAllPermissions()
            );

            $permsPublic = LibPermissions::getRolePermissionsFromApi(self::SERVICE, {{ version }}::class, 1);
            $permissions = LibPermissions::merge($perms, $permsPublic);
        }

        return response()->json([
            'status_code' => 'OK',
            'data' => [
                'roles' => $roles,
                'permissions' => $permissions,
            ],
        ]);
    }
}
