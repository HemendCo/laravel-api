<?php

namespace {{ namespace }};

use {{ namespace }};
use App\Http\Controllers\Api\Client\AclTraits;
use Illuminate\Support\Facades\Validator;
use App\Models\AclRoles as Roles;

class AclRolesUpdate extends {{ version }}
{
    use AclTraits\AclRoles;

    static public function title(): string
    {
        return __('Role update');
    }

    public function __invoke()
    {
        $request = $this->getRequest();
        $input = $this->getRequest()->all();

        $validator = Validator::make($input, [
            'id' => 'bail|required|numeric|min:1'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'status_code' => 'ROLE_ID_INVALID',
                'status_message' => __('messages.The role id is invalid')
            ], 400);
        }

        $validator = Validator::make($input, [
            'title' => 'bail|required_without:name|nullable|string|min:1|max:150',
        ]);

        if($validator->fails()) {
            return response()->json([
                'status_code' => 'ROLE_TITLE_INVALID',
                'status_message' => __('messages.The role title invalid')
            ], 400);
        }

//        $validator = Validator::make($input, [
//            'name' => 'bail|required_without:title|nullable|string|min:1|max:150|regex:/^[a-z][a-z0-9]*(?:[-][a-z0-9]+)*$/'
//        ]);
//
//        if($validator->fails()) {
//            return response()->json([
//                'status_code' => 'ROLE_NAME_INVALID',
//                'status_message' => __('messages.The role name invalid')
//            ], 400);
//        }

        $role = Roles::where('id', request()->input('id'))->first();

        if (!$role) {
            return response()->json([
                'status_code' => 'PERMISSION_DENIED',
                'status_message' => __('messages.You do not have permission to edit the role.')
            ], 409);
        }

        $data = [];
//        if($request->input('name')) {
//            if(in_array(request()->input('id'), ['1', '2', '3', '4', '5', '6'])) {
//                return response()->json([
//                    'status_code' => 'PERMISSION_DENIED',
//                    'status_message' => __('messages.You do not have permission to edit the role name.')
//                ], 409);
//            }
//
//            $roleNameExists = Roles::where('id', '!=', $role->id)
//                ->where('name', $request->input('name'))
//                ->first();
//
//            if ($roleNameExists) {
//                return response()->json([
//                    'status_code' => 'ROLE_NAME_USED',
//                    'status_message' => __('messages.This name has already been registered, please enter another name.')
//                ], 409);
//            }
//
//            $data['name'] = $request->input('name');
//        }

        if($request->input('title')) {
            $data['title'] = $request->input('title');
        }

        $role->update($data);

        return response()->json([
            'status_code' => 'OK',
            'data' => $role
        ]);
    }
}
