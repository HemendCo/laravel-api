<?php

namespace {{ namespace }};

use {{ namespace }};
use App\Http\Controllers\Api\Client\AclTraits;
use App\Models\AclGroups;
use Illuminate\Support\Facades\Validator;

class AclGroupsUpdate extends {{ version }}
{
    use AclTraits\AclGroups;

    static public function title(): string
    {
        return __('Group update');
    }

    public function __invoke()
    {
        $request = $this->getRequest();
        $input = $this->getRequest()->all();

        $validator = Validator::make($input, [
            'id' => 'bail|required|numeric|min:1'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'status_code' => 'GROUP_ID_INVALID',
                'status_message' => __('messages.The group id is invalid')
            ], 400);
        }

        $validator = Validator::make($input, [
            'title' => 'bail|required|string|min:1|max:150',
        ]);

        if($validator->fails()) {
            return response()->json([
                'status_code' => 'GROUP_TITLE_INVALID',
                'status_message' => __('messages.The group title invalid')
            ], 400);
        }

        $group = AclGroups::where('id', request()->input('id'))->first();

        if (!$group) {
            return response()->json([
                'status_code' => 'GROUP_ID_INVALID',
                'status_message' => __('messages.The group id is invalid')
            ], 400);
        }

        $group->update([
            'title' => $request->input('title')
        ]);

        return response()->json([
            'status_code' => 'OK',
            'data' => $group,
        ]);
    }
}
