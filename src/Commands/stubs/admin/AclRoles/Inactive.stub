<?php

namespace {{ namespace }};

use {{ version_namespace }};
use App\Models\AclRoles as Roles;
use Hemend\Api\Interfaces\Endpoint;
use Illuminate\Support\Facades\Validator;

class Inactive extends {{ version }} implements Endpoint
{
    static public function title(): string
    {
        return __('hemend.Role inactivation');
    }

    public function __invoke()
    {
        $input = $this->getRequest()->all();

        $validator = Validator::make($input, [
            'id' => 'bail|required|numeric|min:1|not_in:1,2'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'status_code' => 'ROLE_ID_INVALID',
                'status_message' => __('hemend.The role id is invalid')
            ], 400);
        }

        $role = Roles::where('id', request()->input('id'))->whereNotIn('id', [1, 2])->first();

        if(!$role) {
            return response()->json([
                'status_code' => 'ROLE_ID_INVALID',
                'status_message' => __('hemend.The role id is invalid')
            ], 400);
        }

        if(!$role->activated) {
            return response()->json([
                'status_code' => 'ROLE_ALREADY_INACTIVATED',
                'status_message' => __('hemend.The role has already been inactivated')
            ], 409);
        }

        if($role->is_default && !Roles::where('id', '<>', $role->id)->where('is_default', 1)->where('activated', 1)->exists()) {
            return response()->json([
                'status_code' => 'DEFAULT_ROLE_INACTIVE',
                'status_message' => __('hemend.You cannot inactive or delete the default role')
            ], 409);
        }

        $role->update([
            'activated' => null,
            'is_default' => null,
        ]);

        return response()->json([
            'status_code' => 'OK',
        ]);
    }
}
