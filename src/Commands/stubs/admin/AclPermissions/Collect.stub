<?php

namespace {{ namespace }};

use {{ namespace }};
use Hemend\Api\Implements\Endpoint;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Validator;

class Collect extends AclPermissions implements Endpoint
{
    static public function title(): string
    {
        return __('hemend.Collect of permissions');
    }

    public function __invoke()
    {
        $input = $this->getRequest()->all();

        $validator = Validator::make($input, [
            'service_id' => 'bail|required|numeric|min:1'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'status_code' => 'SERVICE_ID_INVALID',
                'status_message' => __('hemend.The service id is invalid')
            ], 400);
        }

        $service = \App\Models\AclServices::query()
            ->where('id', request()->input('service_id'))
            ->first();

        if (!$service) {
            return response()->json([
                'status_code' => 'SERVICE_ID_INVALID',
                'status_message' => __('hemend.The service id is invalid')
            ], 400);
        }

        $res = Artisan::call('api:acl-collect', [
            'service' => $service->name
        ]);

        if($res == '0') {
            return response()->json([
                'status_code' => 'SERVICE_NAME_INVALID',
                'status_message' => __('hemend.The service name invalid')
            ], 400);
        }

        if($res == '-1') {
            return response()->json([
                'status_code' => 'SERVICE_NOT_FOUND',
                'status_message' => __('hemend.Service not found')
            ], 400);
        }

        return response()->json([
            'status_code' => 'OK',
        ]);
    }
}
