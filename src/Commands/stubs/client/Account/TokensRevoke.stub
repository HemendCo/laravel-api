<?php

namespace {{ namespace }};

use {{ version_namespace }};
use Hemend\Api\Interfaces\Endpoint;
use Illuminate\Support\Facades\Validator;

class TokensRevoke extends {{ version }} implements Endpoint
{
    static public function title(): string
    {
        return __('hemend.Token revoke');
    }
    
    public function __invoke()
    {
        $input = $this->getRequest()->all();

        $validator = Validator::make($input, [
            'token_id' => 'bail|required|string|min:80|max:80',
        ]);

        if($validator->fails()) {
            return response()->json([
                'status_code' => 'TOKEN_ID_INVALID',
                'status_message' => __('hemend.The token id invalid')
            ], 400);
        }

        $token = \Laravel\Passport\Token::where('user_id', $this->user()->id)->where('revoked', '0')->find($input['token_id']);

        if(!$token) {
            return response()->json([
                'status_code' => 'TOKEN_ID_INCORRECT',
                'status_message' => __('hemend.The token id is incorrect.')
            ], 403);
        }

        $token->revoke();

        $refreshTokenRepository = app('Laravel\Passport\RefreshTokenRepository');
        $refreshTokenRepository->revokeRefreshTokensByAccessTokenId($token->id);

        return response()->json([
            'status_code' => 'OK',
        ]);
    }
}
